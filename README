Εργασία 1η - Λειτουργικά Συστήματα (sdi1900315)

Εκτελέσιμο αρχείο a.out.

Υλοποιήσαμε μια δομη για την διαμοιραζόμενη μνήμη (SharedMemory),
καθως και δύο συναρτήσεις (thread_a, thread_b), οι οποίες υλοποιούν
η κάθε μια από μια λειτουργία (θα αναλυθούν στην συνέχεια).

H SharedMemory εχει τρια αντικειμενα. Ένα σεμαφορο που ελεγχει την προσβαση 
στη διαμοιραζόμενη μνημη (semaphore), εναν αριθμο που εχει το συνολο των μηυματων
(message_num) και εναν πινακα που γραφονται εκει τα μηνύματα (messages). 
MAX_MESSAGE_SIZE οριζεται το 15 λογω εκφωνησης εργασαίας.

Η συνάρτηση thread_a, λαμβάνει το μήνυμα απο τον χρήστη και το εισάγει στην 
διαμοιραζόμενη μνήμη. Μεσω της συνάρτησης fgets λαμβάνει την είσοδο απο τον χρήστη.
Το μήνυμα αποθηκέυεται στον πίνακα users_input. Αν ο χρήστης εισήγαγε "BYE" τοτε 
τερματίζει. Έπειτα μεσω της sem_wait σταματάω την λειτουργία του παιδιου και
αντιγράφω (strcpy) το μηνυμα του χρηστη στην διαμοιραζομενη μνημη. H sem_post αυξάνει
την τιμή του σεμαφόρου κατα 1. Μόλις γίνει η εντολή sem_post() στην child διεργασία,
σημαίνει οτι το παιδί έχει ολοκληρώσει την εντολη που θέλει να παραλάβει στην shared memory.

Η συνάρτηση thread_b, λαμβάνει το μήνυμα απο την συναρτηση thread_a, το επεξεργάζεται,
και υπολογίζει τα στοιχεία που εχουν ζητηθει απον την εργασία (αριθμό μηνυμάτων, αριθμο
τεμαχίων, χρόνο αναμονής). Η συναρτηση ελεγχει αν υπάρχει καποιο μηνυμα στην διαμοιραζομενη
μνημη κι αν ναι παιρνει το πρωτο μηνυμα που υπαρχει και το αφαιρει απο την μνήμη, αυξάνει 
κατα ενα τον αριθμο των μηνυμάτων και των αριθμο των τεμαχίων όσο ειανι το κάθε μηνυμα.
Υστερα εκτυπώνει το μήνυμα. Και στην συνέχει επειτα απο τον υπολογισμο των 
στατιστικών εκτυπώνει και αυτα.

Η main δημιουργει νηματα και περιμένει να τλειώσουν για να αποδεσμεύσει την μνήμη.
Δημιουργει ενα αντικειμενο SharedMemory και μεσω τησ sem_init αρχικοποιεί(δημιουργει) τον semaphore, οπου η τιμη 1 
σημαινει ότι ο σημαφόρος είναι κοινόχρηστος μεταξύ διεργασιών και οχι νηματων (0), και η επομενη τιμη 1 πως 
αρχικοποιειται με τιμη 1και αρχικοποιεί τον μετρητη για τα μηνυματα. Επειτα μεσω της pthread_t 
δημιοιυργει δυο νήματα τα thread_a και thread, για τις συναρτήσεις thread_a και thread_b αντιστοιχα. 
Αυτα τα νήματα θα χρησιμοποιηθούν για να εκτελέσουν τις προαναφερόμενες συναρτήσεις και διεργασίες. 
Mέσω της pthread_join,αναμένει για να ολοκληρωθούν τα νήματα a,b. Λογω του οτι δεν χρειάζεται να λάβει τιμη 
εξόδου εξου και το NULL, αν θέλαμε να επιστρέψει κατι θα βάζαμε εναν δείκη στη θέση του. Τέλος με την
sem_destroy καταστρέφουμε τον σεμαφότρο και με την free αποδεσμευουμε την μνήμη.